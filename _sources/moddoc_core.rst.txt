.. include:: intro_core.rst

API Documentation
=================

.. contents:: Contents
   :depth: 1
   :local:

Frame Objects
-------------

Serializable objects that may be stored as entries in :py:class:`~spt3g.core.G3Frame` objects.

.. autoclass:: spt3g.core.G3Bool

.. autoclass:: spt3g.core.G3Double

.. autoclass:: spt3g.core.G3FrameObject

.. autoclass:: spt3g.core.G3Int

.. autoclass:: spt3g.core.G3MapDouble

.. autoclass:: spt3g.core.G3MapFrameObject

.. autoclass:: spt3g.core.G3MapInt

.. autoclass:: spt3g.core.G3MapMapDouble

.. autoclass:: spt3g.core.G3MapQuat

.. autoclass:: spt3g.core.G3MapString

.. autoclass:: spt3g.core.G3MapVectorBool

.. autoclass:: spt3g.core.G3MapVectorComplexDouble

.. autoclass:: spt3g.core.G3MapVectorDouble

.. autoclass:: spt3g.core.G3MapVectorInt

.. autoclass:: spt3g.core.G3MapVectorQuat

.. autoclass:: spt3g.core.G3MapVectorString

.. autoclass:: spt3g.core.G3MapVectorTime

.. autoclass:: spt3g.core.G3MapVectorVectorString

.. autoclass:: spt3g.core.G3ModuleConfig

.. autoclass:: spt3g.core.G3PipelineInfo

.. autoclass:: spt3g.core.G3Quat

.. autoclass:: spt3g.core.G3String

.. autoclass:: spt3g.core.G3Time

.. autoclass:: spt3g.core.G3TimesampleMap

.. autoclass:: spt3g.core.G3Timestream

.. autoclass:: spt3g.core.G3TimestreamMap

.. autoclass:: spt3g.core.G3TimestreamQuat

.. autoclass:: spt3g.core.G3VectorBool

.. autoclass:: spt3g.core.G3VectorComplexDouble

.. autoclass:: spt3g.core.G3VectorDouble

.. autoclass:: spt3g.core.G3VectorFrameObject

.. autoclass:: spt3g.core.G3VectorInt

.. autoclass:: spt3g.core.G3VectorQuat

.. autoclass:: spt3g.core.G3VectorString

.. autoclass:: spt3g.core.G3VectorTime

.. autoclass:: spt3g.core.G3VectorUnsignedChar

.. autoclass:: spt3g.core.G3VectorVectorString

Class-like Pipeline Modules
---------------------------


Classes that can be added to :py:class:`~spt3g.core.G3Pipeline`
instances, either written as callable objects in Python (see
:ref:`class-modules`) or as :py:class:`~spt3g.core.G3Module`-derived
classes in C++ (see :ref:`cxx-modules`).  Aside from adding these into
pipelines using the standard ``Add()`` method, such objects may also be
instantiated outside of pipelines to make use of additional features.

One typical use case is to extract some kind of data from a series of
frames::

    class ExtractData:
        def __init__(self, key="RawTimestreams"):
            self.key = key
            self.data = []
        def __call__(self, frame):
            if self.key in frame:
                self.data.append(frame[self.key])

    # instantiate caching class
    extractor = ExtractData()

    # use instance in a pipeline
    pipe = core.G3Pipeline()
    pipe.Add(core.G3Reader, filename="file.g3")
    pipe.Add(extractor)
    pipe.Run()

    # use extracted data in later processing
    print(extractor.data)

Another use case may be to call additional methods of a class.  For
example, the :py:class:`~spt3g.core.G3Writer` class can be used as a
context manager, and also report the position of the file pointer after
each frame is written::

    with core.G3Writer("file.g3") as writer:
        for frame in frames:
            writer(frame)
            print("Bytes written:", writer.tell())

Class-like modules permit a variety of additional features beyond
their standard usage in pipelines.


.. autoclass:: spt3g.core.G3EventBuilder

.. autoclass:: spt3g.core.G3InfiniteSource

.. autoclass:: spt3g.core.G3Module

.. autoclass:: spt3g.core.G3MultiFileWriter

.. autoclass:: spt3g.core.G3NetworkSender

.. autoclass:: spt3g.core.G3Reader

.. autoclass:: spt3g.core.G3Writer

.. autoclass:: spt3g.core.util.AbortAfterNFrames

.. autoclass:: spt3g.core.util.DeduplicateMetadata

.. autoclass:: spt3g.core.util.DropOrphanMetadata

.. autoclass:: spt3g.core.util.G3ThrottledNetworkSender

.. autoclass:: spt3g.core.util.InjectFrame

Function-like Pipeline Modules
------------------------------

Python functions that can be added to :py:class:`~spt3g.core.G3Pipeline` instances. Such functions may also be called directly with a :py:class:`~spt3g.core.G3Frame` object as the first argument, and do not necessarily need to be used in a pipeline. See :ref:`function-modules` for more detail.

.. autofunction:: spt3g.core.util.Delete

.. autofunction:: spt3g.core.util.Dump

.. autofunction:: spt3g.core.util.InjectDebug

.. autofunction:: spt3g.core.util.Rename

Pipeline Segments
-----------------

Python functions that combine a sequence of pipeline modules, and can be added to :py:class:`~spt3g.core.G3Pipeline` instances. See :ref:`pipesegments` for more detail.

.. autofunction:: spt3g.core.util.G3NetworkReceiver

Useful Classes
--------------

Various Python and C++ classes that are part of the public API.

.. autoclass:: spt3g.core.BoolVector

.. autoclass:: spt3g.core.ComplexDoubleVector

.. autoclass:: spt3g.core.ComplexFloatVector

.. autoclass:: spt3g.core.DoubleVector

.. autoclass:: spt3g.core.FloatVector

.. autoclass:: spt3g.core.FrameObjectVector

.. autoclass:: spt3g.core.FrameTypeVector

.. autoclass:: spt3g.core.FrameVector

.. autoclass:: spt3g.core.G3Frame

.. autoclass:: spt3g.core.G3FrameType

.. autoclass:: spt3g.core.G3LogLevel

.. autoclass:: spt3g.core.G3Logger

.. autoclass:: spt3g.core.G3LoggerVector

.. autoclass:: spt3g.core.G3MultiLogger

.. autoclass:: spt3g.core.G3NullLogger

.. autoclass:: spt3g.core.G3Pipeline

.. autoclass:: spt3g.core.G3PrintfLogger

.. autoclass:: spt3g.core.G3SyslogLogger

.. autoclass:: spt3g.core.G3TimeVector

.. autoclass:: spt3g.core.G3TimestreamUnits

.. autoclass:: spt3g.core.G3VectorStringVector

.. autoclass:: spt3g.core.Int64Vector

.. autoclass:: spt3g.core.IntVector

.. autoclass:: spt3g.core.ModuleConfigVector

.. autoclass:: spt3g.core.Quat

.. autoclass:: spt3g.core.QuatVector

.. autoclass:: spt3g.core.StringVector

.. autoclass:: spt3g.core.UInt64Vector

.. autoclass:: spt3g.core.UIntVector

.. autoclass:: spt3g.core.UnsignedCharVector

.. autoclass:: spt3g.core.apidoc.G3Documenter

.. autoclass:: spt3g.core.fileio.G3File

Useful Functions
----------------

Various Python and C++ functions that are part of the public API.

.. autofunction:: spt3g.core.apidoc.module_apidoc

.. autofunction:: spt3g.core.g3logging.log_debug

.. autofunction:: spt3g.core.g3logging.log_error

.. autofunction:: spt3g.core.g3logging.log_fatal

.. autofunction:: spt3g.core.g3logging.log_info

.. autofunction:: spt3g.core.g3logging.log_notice

.. autofunction:: spt3g.core.g3logging.log_trace

.. autofunction:: spt3g.core.g3logging.log_warn

.. autofunction:: spt3g.core.g3logging.set_log_level

.. autofunction:: spt3g.core.timestreamextensions.concatenate_timestreams

Decorators
----------

Decorator functions for indicating any of the above types and/or modifying function behavior.

.. autodecorator:: spt3g.core.g3decorators.cache_frame_data

.. autodecorator:: spt3g.core.g3decorators.scan_func_cache_data

.. autodecorator:: spt3g.core.modconstruct.indexmod

.. autodecorator:: spt3g.core.modconstruct.pipesegment

.. autodecorator:: spt3g.core.modconstruct.pipesegment_nodoc

.. autodecorator:: spt3g.core.modconstruct.usefulfunc


