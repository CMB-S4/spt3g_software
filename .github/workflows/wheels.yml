name: Wheels

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

  build_wheels:
    name: Build wheels for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # macos-13 is an intel runner, macos-14 is apple silicon
          - os: macos-13
            arch: x86_64
            target: 10.15
          - os: macos-14
            arch: arm64
            target: 11.0
          - os: ubuntu-latest
            arch: x86_64

    steps:
      # need more recent deployment targets for std::filesystem
      - name: Set macOS deployment target
        if: runner.os == 'macOS'
        run: echo "MACOSX_DEPLOYMENT_TARGET=${{ matrix.target }}" >> $GITHUB_ENV

      # missing build tools on some macos runners
      - name: Install macOS build dependencies
        if: runner.os == 'macOS'
        run: brew install automake libtool

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_SKIP: "pp* cp36-* cp37-* *-musllinux* cp38-macosx_arm64"
          CIBW_TEST_SKIP: "*"
          CIBW_BUILD_VERBOSITY: 1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/spt3g*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
