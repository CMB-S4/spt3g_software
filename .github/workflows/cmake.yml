name: CMake

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            toolset: build
            docs: true
          - os: macos-14
            toolset: build
            docs: false
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v5

    - name: Install Linux Dependencies
      if: runner.environment == 'github-hosted' && runner.os == 'Linux'
      run: |
        sudo apt-get --allow-releaseinfo-change update -y
        sudo add-apt-repository universe
        sudo apt update
        sudo apt install gcc-14 g++-14 -y
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 14 --slave /usr/bin/g++ g++ /usr/bin/g++-14
        sudo apt-get install libz-dev libbz2-dev liblzma-dev libflac-dev libnetcdf-dev libpython3-dev
        sudo pip install numpy scipy matplotlib astropy healpy --break-system-packages

    - name: Setup python on macOS
      if: runner.environment == 'github-hosted' && runner.os == 'macOS'
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Install macOS Dependencies
      if: runner.environment == 'github-hosted' && runner.os == 'macOS'
      run: |
        brew install --overwrite bzip2 xz flac netcdf
        python3.13 -m pip install numpy scipy matplotlib astropy healpy --break-system-packages

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        cmake --version
        cmake -E make_directory ${{runner.workspace}}/${{matrix.toolset}}
        rm -rf ${{runner.workspace}}/${{matrix.toolset}}/spt3g

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/${{matrix.toolset}}
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_COMPILE_WARNING_AS_ERROR=yes -DPython_EXECUTABLE=`which python3`

    - name: Build
      working-directory: ${{runner.workspace}}/${{matrix.toolset}}
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE --parallel 4

    - name: Upload
      uses: actions/upload-artifact@v4
      if: runner.environment == 'github-hosted'
      with:
        name: cmake-${{matrix.os}}-${{matrix.toolset}}
        path: ${{runner.workspace}}/${{matrix.toolset}}

    - name: Test
      working-directory: ${{runner.workspace}}/${{matrix.toolset}}
      shell: bash
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE --output-on-failure

    - name: Docs Requirements
      if: runner.environment == 'github-hosted' && github.ref_name == 'master' && matrix.docs
      shell: bash
      run: |
        python3 -m pip install -r $GITHUB_WORKSPACE/doc/requirements.txt

    - name: Docs
      if: github.ref_name == 'master' && matrix.docs
      working-directory: ${{runner.workspace}}/${{matrix.toolset}}
      shell: bash
      # Build docs
      run: |
        rm -f $GITHUB_WORKSPACE/doc/moddoc_*.rst
        rm -rf docs/
        cmake --build . --config $BUILD_TYPE --target docs

    - name: Checkout gh_pages
      if: github.ref_name == 'master' && matrix.docs
      uses: actions/checkout@v5
      with:
        ref: gh-pages
        path: gh-pages

    - name: Commit docs
      if: github.ref_name == 'master' && matrix.docs
      shell: bash
      run: |
        cp -r ${{runner.workspace}}/${{matrix.toolset}}/docs/* gh-pages/
        cd gh-pages
        touch .nojekyll
        git config --local user.name github-actions[bot]
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Update documentation" -a || true
        git push
